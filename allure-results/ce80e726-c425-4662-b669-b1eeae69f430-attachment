# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Floater
- Location: C:\Users\Tecdata\Desktop\IntegrationScripts\Care\CareSupremeFloater.Spec.ts:4:5

# Error details

```
TimeoutError: locator.click: Timeout 40000ms exceeded.
Call log:
  - waiting for getByRole('button', { name: 'Copy Link' })

    at C:\Users\Tecdata\Desktop\IntegrationScripts\Care\CareSupremeFloater.Spec.ts:130:24
```

# Test source

```ts
   30 |
   31 |   } else {
   32 |     await page.waitForTimeout(5000); 
   33 |     await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').hover();
   34 |     await page.waitForTimeout(1000);
   35 |     await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').click();
   36 |     await page.getByRole('link', { name: 'Health Insurance', exact: true }).click();
   37 |   
   38 |   await page.waitForTimeout(7000);
   39 |
   40 |   await page.getByRole('textbox', { name: 'Name' }).fill('Care Test');
   41 |   await page.getByRole('textbox', { name: 'Email' }).fill('Care@gmail.com');
   42 |   await page.getByRole('textbox', { name: 'Mobile Number' }).fill('8531913069');
   43 |   await page.getByRole('button', { name: 'Next' }).click();
   44 |
   45 |   await page.locator('#mat-input-17').type('25');
   46 |   await page.locator('#mat-input-19').type('25');
   47 |   await page.getByRole('textbox', { name: 'PIN CODE' }).type('600012');
   48 |   await page.getByRole('button', { name: 'Proceed' }).click();
   49 |   await page.getByRole('button', { name: 'â‚¹ 9838/Yr' }).click();
   50 |
   51 |   }
   52 |  
   53 |   await page.waitForTimeout(3000);
   54 |   await page.getByText('Other', { exact: true }).click();
   55 |   await page.getByLabel('Identity Proof Type').getByText('Identity Proof Type').click();
   56 |   await page.getByText('PAN', { exact: true }).click();
   57 |   await page.getByText('Address Proof TypeAddress').click();
   58 |   await page.getByText('Voter ID').click();
   59 |   // Setup file path for uploads
   60 |
   61 |   const uploadFile = path.join(__dirname, '../assets/Arunkumar.jpg');
   62 |
   63 |   // Mobile-specific file upload handling
   64 |   for (let i = 0; i < 2; i++) {
   65 |     const fileInput = await page.locator('input[type="file"]').nth(i);
   66 |     // if (isMobile) await fileInput.scrollIntoViewIfNeeded();
   67 |     await fileInput.setInputFiles(uploadFile);
   68 |     await page.waitForTimeout(isMobile ? 2000 : 1000);
   69 |   }
   70 |
   71 |   // Mobile-specific button handling for initial submit
   72 |   const submitButton = page.getByRole('button', { name: 'Submit' });
   73 | //   if (isMobile) await submitButton.scrollIntoViewIfNeeded();
   74 |   await submitButton.click();
   75 |
   76 |   await page.locator('#cdk-accordion-child-17').getByText('TitleTitle *').click();
   77 |   await page.getByText('Mr', { exact: true }).click();
   78 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('First Name *').type('test');
   79 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Last Name *').fill('s');
   80 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').type('08062002');
   81 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Email ID *').fill('free@gmail.com');
   82 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Mobile Number *').fill('8531913068');
   83 |   await page.locator('#mat-input-32').fill('34');
   84 |   await page.locator('#mat-input-33').fill('anna nagar ');
   85 |   await page.locator('#mat-input-34').fill('627005');
   86 |   await page.waitForTimeout(1000);
   87 |   await page.locator('#mat-select-value-23').getByText('City').click();
   88 |   await page.waitForTimeout(2000);
   89 |   await page.getByText('Palayamkottai').click();
   90 |   await page.locator('.mat-checkbox-inner-container').first().click();
   91 |   await page.locator('span.mat-button-wrapper:has-text("Next")').nth(0).click();
   92 |   await page.getByRole('strong').click();
   93 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).click();
   94 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).fill('170');
   95 |   await page.locator('#cdk-accordion-child-23 div').filter({ hasText: /^Weight\(Kg\) \*$/ }).nth(3).click();
   96 |   await page.getByRole('textbox', { name: 'Weight(Kg)' }).fill('70');
   97 |   await page.getByRole('button', { name: 'SPOUSE DETAILS' }).click();
   98 |   await page.getByRole('combobox', { name: 'Title Title' }).locator('span').click();
   99 |   await page.getByText('Ms', { exact: true }).click();
  100 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').click();
  101 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').fill('test');
  102 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Last Name *').click();
  103 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Last Name *').fill('w');
  104 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').click();
  105 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').fill('test');
  106 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').click();
  107 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').fill('08062001');
  108 |   await page.getByRole('combobox', { name: 'Relationship with Proposer' }).locator('span').click();
  109 |   await page.getByText('SPOUSE', { exact: true }).click();
  110 |   await page.locator('#cdk-accordion-child-24 div').filter({ hasText: /^Email ID \*$/ }).nth(3).click();
  111 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Email ID *').fill('free@gmail.com');
  112 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Mobile Number *').click();
  113 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Mobile Number *').fill('8531913068');
  114 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).click();
  115 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).fill('160');
  116 |   await page.getByRole('textbox', { name: 'Weight(Kg)' }).click();
  117 |   await page.getByRole('textbox', { name: 'Weight(Kg)' }).fill('60');
  118 |   await page.locator('#cdk-accordion-child-24').getByRole('button', { name: 'Next' }).click();
  119 |   await page.locator('#cdk-accordion-child-18').getByRole('button', { name: 'Next' }).click();
  120 |
  121 |
  122 |   await page.getByRole('textbox', { name: 'Name of Nominee' }).type('nominee');
  123 |   await page.getByRole('combobox', { name: 'Relationship with Insured' }).locator('div').nth(3).click();
  124 |   await page.getByText('MOTHER', { exact: true }).click();
  125 |   await page.locator('#cdk-accordion-child-19').getByRole('button', { name: 'Next' }).click();
  126 |
  127 |   // Enhanced mobile button handling for final submission
  128 |   const copyLinkButton = page.getByRole('button', { name: 'Copy Link' });
  129 |   if (isMobile) await copyLinkButton.scrollIntoViewIfNeeded();
> 130 |   await copyLinkButton.click();
      |                        ^ TimeoutError: locator.click: Timeout 40000ms exceeded.
  131 |   
  132 |   const payButton = page.getByRole('button', { name: 'Pay by Customer' });
  133 |   if (isMobile) await payButton.scrollIntoViewIfNeeded();
  134 |   await payButton.click();
  135 | });
```