# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: Floater
- Location: C:\Users\Tecdata\Desktop\IntegrationScripts\Care\CareSupremeFloater.Spec.ts:4:5

# Error details

```
Error: page.goto: net::ERR_INTERNET_DISCONNECTED at https://vizzainsurance.com/home
Call log:
  - navigating to "https://vizzainsurance.com/home", waiting until "load"

    at C:\Users\Tecdata\Desktop\IntegrationScripts\Care\CareSupremeFloater.Spec.ts:5:14
```

# Page snapshot

```yaml
- heading "No internet" [level=1]
- paragraph: "Try:"
- list:
  - listitem: Checking the network cables, modem, and router
  - listitem: Reconnecting to Wi-Fi
  - listitem:
    - link "Running Windows Network Diagnostics"
- text: ERR_INTERNET_DISCONNECTED
- application "Dino game, press space to play"
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import path from 'path';
   3 |
   4 | test('Floater', async ({ page, isMobile }) => {
>  5 |   await page.goto('https://vizzainsurance.com/home');
     |              ^ Error: page.goto: net::ERR_INTERNET_DISCONNECTED at https://vizzainsurance.com/home
   6 |   await page.getByRole('button', { name: 'Login' }).click();
   7 |   await page.getByRole('link', { name: '   POS Login' }).click();
   8 |   await page.getByRole('textbox', { name: 'Mobile number' }).fill('9962907312');
   9 |   await page.getByRole('textbox', { name: 'Password' }).fill('admin1');
   10 |   await page.locator('#main-content').getByRole('button', { name: 'Login' }).click();
   11 |   
   12 |   if (isMobile) {
   13 |     await page.waitForTimeout(4000);
   14 |     await page.getByRole('button').filter({ hasText: 'menu' }).click();
   15 |     await page.locator('a').filter({ hasText: 'Health Insurance' }).click();
   16 |     await page.waitForTimeout(2000);
   17 |     await page.getByRole('textbox', { name: 'Name' }).fill('Care Test');
   18 |   await page.getByRole('textbox', { name: 'Email' }).fill('Care@gmail.com');
   19 |   await page.getByRole('textbox', { name: 'Mobile Number' }).fill('8531913069');
   20 |   await page.getByRole('button', { name: 'Next' }).click();
   21 |   await page.locator('#mat-input-25').type('25');
   22 |   await page.locator('#mat-input-27').type('25');
   23 |   await page.getByRole('textbox', { name: 'PIN CODE' }).fill('600012');
   24 |   await page.getByRole('button', { name: 'Proceed' }).click();
   25 | //   await page.pause();
   26 |   await page.getByRole('button', { name: '₹9838 /Yr' }).click();
   27 |
   28 |
   29 |
   30 |   } else {
   31 |     await page.waitForTimeout(5000); 
   32 |     await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').hover();
   33 |     await page.waitForTimeout(1000);
   34 |     await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').click();
   35 |     await page.getByRole('link', { name: 'Health Insurance', exact: true }).click();
   36 |   
   37 |   await page.waitForTimeout(7000);
   38 |
   39 |   await page.getByRole('textbox', { name: 'Name' }).fill('Care Test');
   40 |   await page.getByRole('textbox', { name: 'Email' }).fill('Care@gmail.com');
   41 |   await page.getByRole('textbox', { name: 'Mobile Number' }).fill('8531913069');
   42 |   await page.getByRole('button', { name: 'Next' }).click();
   43 |
   44 |   await page.locator('#mat-input-17').type('25');
   45 |   await page.locator('#mat-input-19').type('25');
   46 |   await page.getByRole('textbox', { name: 'PIN CODE' }).type('600012');
   47 |   await page.getByRole('button', { name: 'Proceed' }).click();
   48 |   await page.getByRole('button', { name: '₹ 9838/Yr' }).click();
   49 |
   50 |   }
   51 |  
   52 |   await page.waitForTimeout(3000);
   53 |   await page.getByText('Other', { exact: true }).click();
   54 |   await page.getByLabel('Identity Proof Type').getByText('Identity Proof Type').click();
   55 |   await page.getByText('PAN', { exact: true }).click();
   56 |   await page.getByText('Address Proof TypeAddress').click();
   57 |   await page.getByText('Voter ID').click();
   58 |   // Setup file path for uploads
   59 |
   60 |   const uploadFile = path.join(__dirname, '../assets/Arunkumar.jpg');
   61 |
   62 |   // Mobile-specific file upload handling
   63 |   for (let i = 0; i < 2; i++) {
   64 |     const fileInput = await page.locator('input[type="file"]').nth(i);
   65 |     // if (isMobile) await fileInput.scrollIntoViewIfNeeded();
   66 |     await fileInput.setInputFiles(uploadFile);
   67 |     await page.waitForTimeout(isMobile ? 2000 : 1000);
   68 |   }
   69 |
   70 |   // Mobile-specific button handling for initial submit
   71 |   const submitButton = page.getByRole('button', { name: 'Submit' });
   72 | //   if (isMobile) await submitButton.scrollIntoViewIfNeeded();
   73 |   await submitButton.click();
   74 |
   75 |   await page.locator('#cdk-accordion-child-17').getByText('TitleTitle *').click();
   76 |   await page.getByText('Mr', { exact: true }).click();
   77 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('First Name *').type('test');
   78 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Last Name *').fill('s');
   79 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').fill('08062002');
   80 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Email ID *').fill('free@gmail.com');
   81 |   await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Mobile Number *').fill('8531913068');
   82 |   await page.locator('#mat-input-32').fill('34');
   83 |   await page.locator('#mat-input-33').fill('anna nagar ');
   84 |   await page.locator('#mat-input-34').fill('627005');
   85 |   await page.waitForTimeout(1000);
   86 |   await page.locator('#mat-select-value-23').getByText('City').click();
   87 |   await page.waitForTimeout(2000);
   88 |   await page.getByText('Palayamkottai').click();
   89 |   await page.locator('.mat-checkbox-inner-container').first().click();
   90 |   await page.locator('span.mat-button-wrapper:has-text("Next")').nth(0).click();
   91 |   await page.getByRole('strong').click();
   92 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).click();
   93 |   await page.getByRole('textbox', { name: 'Height(Cm)' }).fill('170');
   94 |   await page.locator('#cdk-accordion-child-23 div').filter({ hasText: /^Weight\(Kg\) \*$/ }).nth(3).click();
   95 |   await page.getByRole('textbox', { name: 'Weight(Kg)' }).fill('70');
   96 |   await page.getByRole('button', { name: 'SPOUSE DETAILS' }).click();
   97 |   await page.getByRole('combobox', { name: 'Title Title' }).locator('span').click();
   98 |   await page.getByText('Ms', { exact: true }).click();
   99 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').click();
  100 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').fill('test');
  101 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Last Name *').click();
  102 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('Last Name *').fill('w');
  103 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').click();
  104 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('First Name *').fill('test');
  105 |   await page.getByRole('region', { name: 'SPOUSE DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').click();
```