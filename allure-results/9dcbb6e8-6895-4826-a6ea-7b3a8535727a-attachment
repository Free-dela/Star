# Instructions

- Following Playwright test failed.
- Explain why, be concise, respect Playwright best practices.
- Provide a snippet of code with the fix, if possible.

# Test info

- Name: SWC
- Location: C:\Users\Tecdata\Desktop\IntegrationScripts\Star\SWC.spec.ts:5:6

# Error details

```
Error: page.goto: net::ERR_ABORTED; maybe frame was detached?
Call log:
  - navigating to "https://vizzainsurance.com/home", waiting until "load"

    at C:\Users\Tecdata\Desktop\IntegrationScripts\Star\SWC.spec.ts:6:16
```

# Test source

```ts
   1 | import { test, expect } from '@playwright/test';
   2 | import path from 'path';
   3 | import readline from 'readline';
   4 |
   5 | test.only('SWC', async ({ page, isMobile }) => {
>  6 |     await page.goto('https://vizzainsurance.com/home');
     |                ^ Error: page.goto: net::ERR_ABORTED; maybe frame was detached?
   7 |     
   8 |     await page.getByRole('button', { name: 'Login' }).click();
   9 |     await page.getByRole('link', { name: '   POS Login' }).click();
   10 |     await page.getByRole('textbox', { name: 'Mobile number' }).fill('9962907312');
   11 |     await page.getByRole('textbox', { name: 'Password' }).fill('admin1');
   12 |     await page.locator('#main-content').getByRole('button', { name: 'Login' }).click();
   13 |     
   14 |     if (isMobile) {
   15 |         await page.waitForTimeout(4000);
   16 |         await page.getByRole('button').filter({ hasText: 'menu' }).click();
   17 |         await page.locator('a').filter({ hasText: 'Health Insurance' }).click();
   18 |         await page.waitForTimeout(2000);
   19 |         await page.getByRole('textbox', { name: 'Name' }).type('test ');
   20 |     await page.getByRole('textbox', { name: 'Email' }).type('freedela0912@gmail.com');
   21 |     await page.getByRole('textbox', { name: 'Mobile Number' }).click();
   22 |     await page.getByRole('textbox', { name: 'Mobile Number' }).fill('8531913069');
   23 |     await page.getByRole('button', { name: 'Next' }).click();
   24 |
   25 |   await page.locator('#mat-input-25').type('25');
   26 |   await page.locator('#mat-input-27').type('25');
   27 |   await page.getByRole('textbox', { name: 'PIN CODE' }).type('600012');
   28 |   await page.getByRole('button', { name: 'Proceed' }).click();
   29 |   await page.getByRole('button', { name: '₹14904 /Yr' }).click();
   30 |
   31 |
   32 |     } else {
   33 |         await page.waitForTimeout(2000); 
   34 |         await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').hover();
   35 |         await page.waitForTimeout(1000);
   36 |         await page.locator('span.horizontal-menu-title:has-text("Online Insurance")').click();
   37 |         await page.getByRole('link', { name: 'Health Insurance', exact: true }).click();
   38 |         await page.waitForTimeout(3000);
   39 |
   40 |     await page.getByRole('textbox', { name: 'Name' }).type('test ');
   41 |     await page.getByRole('textbox', { name: 'Email' }).type('freedela0912@gmail.com');
   42 |     await page.getByRole('textbox', { name: 'Mobile Number' }).click();
   43 |     await page.getByRole('textbox', { name: 'Mobile Number' }).fill('8531913069');
   44 |     await page.getByRole('button', { name: 'Next' }).click();
   45 |     await page.locator('#mat-input-17').type('25');
   46 |     await page.locator('#mat-input-19').type('25');
   47 |     await page.getByRole('textbox', { name: 'PIN CODE' }).type('600012');
   48 |     await page.getByRole('button', { name: 'Proceed' }).click();
   49 |     await page.getByRole('button', { name: '₹ 14904/Yr' }).click();
   50 |
   51 |     }
   52 |     // Enhanced mobile-specific element handling for dropdowns
   53 |     if (isMobile) {
   54 |         await page.evaluate(() => window.scrollTo(0, 0)); // Scroll to top for better dropdown visibility
   55 |       }
   56 |       
   57 |      await page.waitForTimeout(5000);
   58 |       await page.getByRole('combobox', { name: 'Title Title' }).locator('span').click();
   59 |       await page.getByText('Mr', { exact: true }).click();
   60 |
   61 |     // Add verification that selection was successful
   62 |     await page.getByRole('textbox', { name: 'First Name' }).type('Test');
   63 |     await page.getByRole('textbox', { name: 'Last Name' }).type('W');
   64 |     await page.getByLabel('1PROPOSER DETAILS').getByText('OccupationOccupation *').click();
   65 |     await page.getByText('PROFESSIONAL-ENGINEER').click();
   66 |     await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('DOB (DD/MM/YYYY) *').fill('09121999');
   67 |     await page.getByLabel('1PROPOSER DETAILS').locator('div').filter({ hasText: /^Email ID \*$/ }).nth(3).click();
   68 |     await page.getByRole('textbox', { name: 'Email ID' }).fill('freedela0912@gmail.com');
   69 |     await page.getByRole('textbox', { name: 'Mobile Number' }).type('8531913069');
   70 |     await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Address 1 *').type('2A');
   71 |     await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Address 2 *').type('Star Assure');
   72 |     await page.getByRole('tabpanel', { name: 'PROPOSER DETAILS' }).getByLabel('Pincode *').type('600012');
   73 |     await page.waitForTimeout(4000);
   74 |     await page.getByLabel('1PROPOSER DETAILS').getByLabel('City *').getByText('City').click();
   75 |     await page.getByText('Chennai').click();
   76 |     await page.waitForTimeout(4000);
   77 |     await page.getByLabel('1PROPOSER DETAILS').getByLabel('Area *').getByText('Area').click();
   78 |     await page.getByText('Perambur Barracks').click();
   79 |
   80 |     const currentDate = new Date();
   81 |     const formattedDate = `${currentDate.getDate()}/${currentDate.getMonth() + 1}/${currentDate.getFullYear()}`;
   82 |
   83 |     await page.locator('#mat-input-51').type(formattedDate);
   84 |     await page.waitForTimeout(2000);
   85 |
   86 |     await page.locator('span.mat-button-wrapper:has-text("Next")').nth(0).click();
   87 |     
   88 |     await page.waitForTimeout(2000);
   89 |     await page.locator('#mat-radio-64').click();
   90 |     
   91 |     await page.getByRole('textbox', { name: 'PAN Number' }).fill('gjkpm0846p');
   92 |     await page.getByRole('button', { name: 'Submit' }).click();
   93 |   
   94 |     const imagePath = path.join(__dirname, '../assets/Arunkumar.jpg');
   95 |     
   96 |     // Enhanced file upload for mobile
   97 |     for (let i = 0; i < 3; i++) {
   98 |         const fileInput = await page.locator('input[type="file"]').nth(i);
   99 |         // if (isMobile) await fileInput.scrollIntoViewIfNeeded();
  100 |         await fileInput.setInputFiles(imagePath);
  101 |         await page.waitForTimeout(isMobile ? 2000 : 1000);
  102 |     }
  103 |
  104 |     // Mobile-specific checkbox handling
  105 |     const checkbox = page.locator('#mat-checkbox-17');
  106 |     if (isMobile) await checkbox.scrollIntoViewIfNeeded();
```